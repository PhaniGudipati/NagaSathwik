Core java+spring boot  html+css+angular


Full Stack

Frontend  client     Backend server

Language
============
Communication between Humans 

Programming Language
=======================
POP                            OOP
c,b,bcpl,cobol                c++,java,python,.net,r,etc
1)Performance
2)Security                        1)Platform Independent wora -write once run anywhere
                                   2)Garbage collection
								   
james ghosling 1995  Oak sun microsystems  java oracle corp
jdk 1.0
1.8
11 17 20
Desktop app
Media player 



Distributed app
gmail,


Jse java standard 
Desktop apps

Jee  java enterprice 

Desktop+distributed

Jme  java mobile

android based

Jdk=java development kit
Jre=java runtime environment
Jvm=java virtual machine


in java we have 53 keywords and all the keywords in the lowercase
goto ,const


compilation .java/userunderstandable/source windows =.class /machine/byte MacOs  ==javac filename.java

execution  java filename

35-45

Identifiers:A name in  java 
a-z A-Z 0-9 _ and $

naga_$
0123nag
nag123
nag$_
$_$_$_
@valid 

Variable;a name of the memory location

datatype varname=value;
int age=100;

datatypes
===============
premitive                       non premitive      String,array   
8
byte 1byte  short  2bytes int 4bytes long 8bytes     
float 4bytes double 8bytes
char 2bytes
boolean  1bit

ex:
class Naga{
	public static void main(String args[]){
		byte b=100;
		short s=32000;
		int i=123456789;
		long l=9876543210l;
		float f=123.45678f;
		double d=1234.1234567890;
		char ch='N';
		boolean be=true;
		System.out.println(b);
		System.out.println(s);
		System.out.println(i);
		System.out.println(l);
		System.out.println(f);
		System.out.println(d);
		System.out.println(ch);
		System.out.println(be);
		
		}
	}

Operators
===============
unary
int a=10;
a++;++a;a--;--a

arthimetic
+,-,/,*,%
shift left ,right 

<<  >>

left n*2^a

10<<2
10*2^2

right
n/2^a
assignment
int a=10;
a+=10;//a=a+10
a-=10;//

bitwise and logical 

bitwise AND  & bitwise OR
A   B
0   0              
0   1
1   0
1   1=true


a=10
b=20
c=30

 16  8 4 2 1
  1  1 1 1 0
  0  1 0 1 0  = a
  0  1 0 1 0
  
  
  1  0 1 0 0  =b
  0 0 0 0 0 0
  

a>b && c>a 
hello



ternary 

package 
a folder in java 

for compilation javac -d . filename.java
for execution   java packagename.classname
predefined
java.lang is a default java package

int marks=35

enhanced for loop
and patterns 
*****         12345          ABCDE
****
***
**
*

Eclipse,intellij,vscode ,netbeans

Scanner class 
java.util

take the input from the user
employee details
empName empsal empid

***Variables

datatype Varname=value;

Local Variable  and Global Variable

Instance  and static

Syntax:if it is static there is a static keyword inthe syntax

Memory:static pro will get memory space only once at the time of class loading into jvm 
instance pro will get the memory space at the time of every object creation

class:car
Object:types
Classname objname =new Classname();
Access :
static by using classname/directly/obj 
instance by usong obj name
Usage:unique  for instance
common for static

Commandline Args:
args which are passed at the time of running

Method:
method is a group of statements
                                    void
AccessModifier   variablename  returntype methodname (args){


//block of statements


}

ex:public void addition(int a,int b){
System.oout.println(a+b);



}



package com.core.java.naga;

public class Caluculator {
	int a=100;
	public int addition(int a, int b) {
		System.out.println(a + b);
		return a + b;
	}

	public static void subtraction() {
		int a = 100;
		int b = 50;
		System.out.println(a - b);

	}

	public static int multiplication(int a, int b) {
		System.out.println(a * b);
		return a * b;
	}

	public int division() {
		int a = 10;
		int b = 2;
		System.out.println(a / b);
		return a / b;
	}

	public static void main(String[] args) {
		Caluculator obj = new Caluculator();
		obj.addition(15, 10);
		Caluculator.subtraction();
		Caluculator.multiplication(10, 5);
		obj.division();
		System.out.println(obj.a);

	}

}




 local         how when where
 instance     how when where
 static       how when where
 
 
 JVM architecuture
 
 
 CLSS 
 
 MEMORYAREA
 
 
 EXECUTION ENGINE

OOPS
=================
Class :A blueprint of an object logical existence

Object:is an instance of class physical 



Inheritance:

Abstraction :

Polymorphism

Encapsulation

Inheritance
=========================
It is the mechanism of aquring the properties from one class(super/parent) to another class(sub/child)

**Code Reusability

extends:class=class,interface=inerface 
Implements:class=interface,interface=class


class A{

1000 

} 

class B extends A {

5lines

}

Types of Inheritance

Multiple Inheirtance:is not supported in java at class level but it is supported in java at inetrface level


Concrete method :Method with implementation/body


Abstract Method:method without Implementation/body


Class :Combination of only concrete methods 

Abstract Class: Combination of both concrete and Abstract methods

Interface: it is a combination of only abstract methods

Abstraction
=====================
Hiding the internals by showcasing their functionality
Security
abstract class =0-100and interface 100


class A {                   class B{

add(){						add(){
x+y;						x-y;

}								}



}                                 }
class C extends A,B{
main(){
C c=new C();
c.add();







}




}

Polymorphism
Compile/methodoverloading:method name is same but signature is different(no of params,type of params,order of params)
package com.core.java.naga;

public class MethodOExa {
	public void add(int a,int b) {
		System.out.println("add of two integers:" +(a+b));
	}
	public void add(int a,int b,int c) {
		System.out.println("add of three integers:" +(a+b+c));
	}

	public void add(float a,float b) {
		System.out.println("add of two floats:" +(a+b));
	}

	public void add(int a,float b) {
		System.out.println("add of int and float:" +(a+b));
	}
	public void add(float a,int b) {
		System.out.println("add of float and int:" +(a+b));
	}

	public static void main(String[] args) {
		MethodOExa m=new MethodOExa();
		m.add(10, 20);
		m.add(10, 20, 30);
		m.add(20.3f, 30.7f);
		m.add(20, 20.30f);
		m.add(30.9f, 20);
	}

}

Runtime/Methodoverriding:method name same but implementation is different


Constructor:A special member function which is called to instantiate the objects

classname objname=new Constructor();

no args / parameterised constructor


final:before the variable,method,class


this:this keyword is used to represent current class properties


super:this keyword is used to represent parent class properties

package com.core.java.naga;
class Parentt{
	int a=123;
	Parentt(){
		super();
		System.out.println("Parent class Default constrictor");
		
	}
	public void m1() {
		System.out.println("am from parent class m1 method");
	}
}

public class ThisSuperExa extends Parentt {
	int a=234;
 ThisSuperExa() {
		System.out.println(this.a);
		System.out.println(super.a);
		this.m1();
		super.m1();
	}
 ThisSuperExa(String name){
	 
	 this();
	 System.out.println("param const" + name);
 }
 public void m1() {
	 System.out.println("am from child class  ");
}

	public static void main(String[] args) {
		ThisSuperExa obj=new ThisSuperExa("Phani");
		System.out.println(obj.a);
	
		

	}

}

AccessModifiers:
public 
private
protected
default


Encapsulation:binding or combining data members with there functions together

getters setters

Exception Handling
==================

class A{

1
2 error//abnormal and System defined error msgss



1000
}

normal termination and user friendly error msgs


int a=100;
ARRAY
==============
array is fixed in size and a collection of homogenous elements which are indexed
int a[]=new int[5] 0-4

100 200 300 400 500
n,n-1
int a[]={100,200,300,400}

int a[][]={{10,20,30},{40,50,60}}

String 
=============
Collection of Characters
String name=new String("Phani");
String name="Phani";
String is Immutable
StringBuffer most of the methods are Synchronized Threadsafety,poor Performance,StringBuilder non synchronized Better Performnace,no thread safety
thread 


class A{
public void synchronized add(){

1
2
3
4

100
}
}


throw,throws

age >18
you are elgible to vote

your are not elgible to vote

1)make your class as child to the Thorwable,Exception,RunTimeException
15mins
2)create a parameterised constructor

throws is a key word which used along with the method declaration

File io
input(write) output(Read)
File
BufferWriter
Printwriter
BufferReader
PrintReader

